1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
Suppose we have a file in a project we are working on and we save all the different 
versions of the file we have created separately. Now when something goes wrong in 
the ith version we can compare it with previous version using the diff command to 
see what are the places we have changed something. Now in most of the cases this will
be much less in size compared to the whole file. So we can only focus on the few places
where a change was made instead of the whole file. This can be a huge advangtage when
working with large files.


2. How could having easy access to the entire history of a file make you a more efficient 
programmer in the long term?
If we have the entire history of a file we are working on it can be a huge advantage to
us as a programmer. If we know that some version was working fine but when we get a 
different version its a total disaster. In that case we can use the "diff" command to 
compare these two versions and identify what are the places where a change was made and
then work on those areas instead of going through the whole current version of the file.
This can save us a lot of time when working on a big file.


3. What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros:
We have a lot of flexibility over the kind commits we are making as we don't have a
predefined time(or lines of code). This is good because we don't know that we would
have added or modified something meaningful in the given duration. Sometimes it may 
take longer to do things and sometimes, like if we have to fix typos, it could take
a lot less time. So its better to commit manually when we think we have done something
worth commiting.

Cons:
It has only drawback is that since its humans who are doing the commits, they can
sometimes forget to commit.



4. Why do you think some version control systems, like Git, allow saving multiple files in one 
commit, while others, like Google Docs, treat each file separately?
It's so because Git is version control system more suitable to programmers 
who may write code in separate files that interact with each other. So, we need to 
track the changes made to these files as a group, not separately.

Unlike Git some version control, like Google Docs, treat each file separatley beacause
they are general pursose editors for editing documents not code. Since generally we
don't have such a dependency between different documents, Google docs tracks each document
separately.



5. How can you use the commands git log and git diff to view the history of files?
"git log" can tell us all the commits that we have made so far. Also "git log --stats" will
tell us the commits and the files that were changed in each commit. Now if we 
know which versions we want to compare, we can use "git diff id1 id2" to see what were
the changes made to the files in the repository to get from version with id1 to version with id2.

6. How might using version control make you more confident to make changes that could break something?
Now I can experimetn with my code to see what changes can I make and when I think things 
have got out of control I can go back to any previous commit. So it makes me confident
to make a the changes which I feel might work without thinking of the affects that it 
can cause if it fails.


7. Now that you have your workspace set up, what do you want to try using Git for?
I want to use it for any future projects I would work on.